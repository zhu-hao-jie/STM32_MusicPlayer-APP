


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         
    3 00000000         ;libdemac - A Monkey's Audio decoder
    4 00000000         
    5 00000000         ;$Id: predictor-arm.S 26756 2010-06-11 04:41:36Z funman 
                       $
    6 00000000         
    7 00000000         ;Copyright (C) Dave Chapman 2007
    8 00000000         
    9 00000000         ;This program is free software; you can redistribute it 
                       and/or modify
   10 00000000         ;it under the terms of the GNU General Public License as
                        published by
   11 00000000         ;the Free Software Foundation; either version 2 of the L
                       icense, or
   12 00000000         ;(at your option) any later version.
   13 00000000         
   14 00000000         ;This program is distributed in the hope that it will be
                        useful,
   15 00000000         ;but WITHOUT ANY WARRANTY; without even the implied warr
                       anty of
   16 00000000         ;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  S
                       ee the
   17 00000000         ;GNU General Public License for more details.
   18 00000000         
   19 00000000         ;You should have received a copy of the GNU General Publ
                       ic License
   20 00000000         ;along with this program; if not, write to the Free Soft
                       ware
   21 00000000         ;Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, 
                       MA 02110, USA
   22 00000000         
   23 00000000         */
   24 00000000         ; #include "demac_config.h"
   25 00000000         
   26 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000                 THUMB
   28 00000000                 REQUIRE8
   29 00000000                 PRESERVE8
   30 00000000         
   31 00000000         ;/* NOTE: The following need to be kept in sync with par
                       ser.h */
   32 00000000         
   33 00000000 00000200 
                       PREDICTOR_HISTORY_SIZE
                               EQU              512
   34 00000000         
   35 00000000 000000C8 
                       YDELAYA EQU              200
   36 00000000 000000A8 
                       YDELAYB EQU              168
   37 00000000 00000088 
                       XDELAYA EQU              136
   38 00000000 00000068 
                       XDELAYB EQU              104
   39 00000000         
   40 00000000         
   41 00000000 00000048 



ARM Macro Assembler    Page 2 


                       YADAPTCOEFFSA
                               EQU              72
   42 00000000 00000038 
                       XADAPTCOEFFSA
                               EQU              56
   43 00000000 00000028 
                       YADAPTCOEFFSB
                               EQU              40
   44 00000000 00000014 
                       XADAPTCOEFFSB
                               EQU              20
   45 00000000         
   46 00000000         ;/* struct predictor_t members: */
   47 00000000 00000000 
                       buf     EQU              0           ;/* int32_t* buf */
                                                            
   48 00000000         
   49 00000000 00000004 
                       YlastA  EQU              4           ;/* int32_t YlastA;
                                                             */
   50 00000000 00000008 
                       XlastA  EQU              8           ;/* int32_t XlastA;
                                                             */
   51 00000000         
   52 00000000 0000000C 
                       YfilterB
                               EQU              12          ;/* int32_t Yfilter
                                                            B; */
   53 00000000 00000010 
                       XfilterA
                               EQU              16          ;/* int32_t Xfilter
                                                            A; */
   54 00000000         
   55 00000000 00000014 
                       XfilterB
                               EQU              20          ;/* int32_t Xfilter
                                                            B; */
   56 00000000 00000018 
                       YfilterA
                               EQU              24          ;/* int32_t Yfilter
                                                            A; */
   57 00000000         
   58 00000000 0000001C 
                       YcoeffsA
                               EQU              28          ;/* int32_t Ycoeffs
                                                            A[4]; */
   59 00000000 0000002C 
                       XcoeffsA
                               EQU              44          ;/* int32_t Xcoeffs
                                                            A[4]; */
   60 00000000 0000003C 
                       YcoeffsB
                               EQU              60          ;/* int32_t Ycoeffs
                                                            B[5]; */
   61 00000000 00000050 
                       XcoeffsB
                               EQU              80          ;/* int32_t Xcoeffs
                                                            B[5]; */
   62 00000000         



ARM Macro Assembler    Page 3 


   63 00000000 00000064 
                       historybuffer
                               EQU              100         ;/* int32_t history
                                                            buffer[] */
   64 00000000         
   65 00000000         ; Macro for loading 2 registers, for various ARM version
                       s.
   66 00000000         ; Registers must start with an even register, and must b
                       e consecutive.
   67 00000000         
   68 00000000         
   69 00000000         ; Macro for storing 2 registers, for various ARM version
                       s.
   70 00000000         ; Registers must start with an even register, and must b
                       e consecutive.
   71 00000000         
   72 00000000         
   73 00000000         
   74 00000000                 GLOBAL           predictor_decode_stereo
   75 00000000         ;    .type       predictor_decode_stereo,%function
   76 00000000         
   77 00000000                 MACRO
   78 00000000                 LDR2OFS          $reg1, $reg2, $base, $offset
   79 00000000         
   80 00000000                 ldr              $reg1, [$base, $offset]
   81 00000000                 ldr              $reg2, [$base, $offset+4]
   82 00000000         
   83 00000000                 MEND
   84 00000000         
   85 00000000         
   86 00000000         
   87 00000000                 MACRO
   88 00000000         
   89 00000000                 STR2OFS          $reg1, $reg2, $base, $offset
   90 00000000         
   91 00000000                 str              $reg1, [$base, $offset]
   92 00000000                 str              $reg2, [$base, $offset+4]
   93 00000000         
   94 00000000                 MEND                         ; C64TOS
   95 00000000         
   96 00000000         
   97 00000000         ; Register usage:
   98 00000000         ;
   99 00000000         ; r0-r11 - scratch
  100 00000000         ; r12 - struct predictor_t* p
  101 00000000         ; r14 - int32_t* p->buf
  102 00000000         
  103 00000000         ; void predictor_decode_stereo(struct predictor_t* p,
  104 00000000         ;                              int32_t* decoded0,
  105 00000000         ;                              int32_t* decoded1,
  106 00000000         ;                              int count)
  107 00000000         
  108 00000000         predictor_decode_stereo
                               PROC
  109 00000000                 EXPORT           predictor_decode_stereo
  110 00000000         
  111 00000000 E92D 4FFE       stmdb            sp!, {r1-r11, lr}
  112 00000004         
  113 00000004         ; r1 (decoded0) is [sp]



ARM Macro Assembler    Page 4 


  114 00000004         ; r2 (decoded1) is [sp, #4]
  115 00000004         ; r3 (count)    is [sp, #8]
  116 00000004         
  117 00000004 4684            mov              r12, r0     ; r12 := p
  118 00000006 F8D0 E000       ldr              r14, [r0]   ; r14 := p->buf
  119 0000000A         
  120 0000000A         loop
  121 0000000A         
  122 0000000A         ;@;@;@;@;@;@;@;@;@;@;@;@;@; PREDICTOR Y
  123 0000000A         
  124 0000000A         ; Predictor Y, Filter A
  125 0000000A         
  126 0000000A F8DC B004       ldr              r11, [r12, #YlastA] 
                                                            ; r11 := p->YlastA
  127 0000000E         
  128 0000000E F10E 02BC       add              r2, r14, #YDELAYA-12 ; r2 := &p
                                                            ->buf[YDELAYA-3]
  129 00000012 E892 040C       ldmia            r2, {r2, r3, r10} ; r2 := p->bu
                                                            f[YDELAYA-3]
  130 00000016         ; r3 := p->buf[YDELAYA-2]
  131 00000016         ; r10 := p->buf[YDELAYA-1]
  132 00000016         
  133 00000016 F10C 061C       add              r6, r12, #YcoeffsA
  134 0000001A E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->Ycoeff
                                                            sA[0]
  135 0000001E         ; r7 := p->YcoeffsA[1]
  136 0000001E         ; r8 := p->YcoeffsA[2]
  137 0000001E         ; r9 := p->YcoeffsA[3]
  138 0000001E         
  139 0000001E EBBB 0A0A       subs             r10, r11, r10 
                                                            ; r10 := r11 - r10
  140 00000022         
  141 00000022         ;    STR2OFS r10, r11, r14, #YDELAYA-4
  142 00000022         ; p->buf[YDELAYA-1] = r10
  143 00000022         ; p->buf[YDELAYA] = r11
  144 00000022         ;  STR2OFS $reg1, $reg2, $base, $offset
  145 00000022         
  146 00000022 F8CE A0C4       str              r10, [r14, #YDELAYA-4]
  147 00000026 F8CE B0C8       str              r11, [r14, #YDELAYA]
  148 0000002A         
  149 0000002A FB0B F006       mul              r0, r11, r6 ; r0 := p->buf[YDEL
                                                            AYA] * p->YcoeffsA[
                                                            0]
  150 0000002E FB0A 0007       mla              r0, r10, r7, r0 ; r0 += p->buf[
                                                            YDELAYA-1] * p->Yco
                                                            effsA[1]
  151 00000032 FB03 0008       mla              r0, r3, r8, r0 ; r0 += p->buf[Y
                                                            DELAYA-2] * p->Ycoe
                                                            ffsA[2]
  152 00000036 FB02 0009       mla              r0, r2, r9, r0 ; r0 += p->buf[Y
                                                            DELAYA-3] * p->Ycoe
                                                            ffsA[3]
  153 0000003A         
  154 0000003A         ; flags were set above, in the subs instruction
  155 0000003A BFC8 F06F 
              0A00             mvngt            r10, #0
  156 00000040 BFB8 F04F 
              0A01             movlt            r10, #1     ; r10 := SIGN(r10) 
                                                            (see .c for SIGN ma



ARM Macro Assembler    Page 5 


                                                            cro)
  157 00000046         
  158 00000046 F1BB 0F00       cmp              r11, #0
  159 0000004A BFC8 F06F 
              0B00             mvngt            r11, #0
  160 00000050 BFB8 F04F 
              0B01             movlt            r11, #1     ; r11 := SIGN(r11) 
                                                            (see .c for SIGN ma
                                                            cro)
  161 00000056         
  162 00000056                 STR2OFS          r10, r11, r14, #YADAPTCOEFFSA-4
   90 00000056         
   91 00000056 F8CE A044       str              r10, [r14, #YADAPTCOEFFSA-4]
   92 0000005A F8CE B048       str              r11, [r14, #YADAPTCOEFFSA-4+4]
   93 0000005E         
  163 0000005E         ; p->buf[YADAPTCOEFFSA-1] := r10
  164 0000005E         ; p->buf[YADAPTCOEFFSA] := r11
  165 0000005E         
  166 0000005E         ; NOTE: r0 now contains predictionA - don't overwrite.
  167 0000005E         
  168 0000005E         ; Predictor Y, Filter B
  169 0000005E                 LDR2OFS          r6, r7, r12, #YfilterB 
                                                            ; r6 := p->YfilterB
                                                            
   79 0000005E         
   80 0000005E F8DC 600C       ldr              r6, [r12, #YfilterB]
   81 00000062 F8DC 7010       ldr              r7, [r12, #YfilterB+4]
   82 00000066         
  170 00000066         ; r7 := p->XfilterA
  171 00000066         
  172 00000066         
  173 00000066         
  174 00000066 F10E 0298       add              r2, r14, #YDELAYB-16 ; r2 := &p
                                                            ->buf[YDELAYB-4]
  175 0000006A E892 041C       ldmia            r2, {r2 - r4, r10} ; r2 := p->b
                                                            uf[YDELAYB-4]
  176 0000006E         ; r3 := p->buf[YDELAYB-3]
  177 0000006E         ; r4 := p->buf[YDELAYB-2]
  178 0000006E         ; r10 := p->buf[YDELAYB-1]
  179 0000006E         
  180 0000006E EBC6 1646       rsb              r6, r6, r6, lsl #5 ; r6 := r6 *
                                                             32 - r6 ( == r6*31
                                                            )
  181 00000072 EBA7 1B66       sub              r11, r7, r6, asr #5 ; r11 (p->b
                                                            uf[YDELAYB]) := r7 
                                                            - (r6 >> 5)
  182 00000076         
  183 00000076 F8CC 700C       str              r7, [r12, #YfilterB] ; p->Yfilt
                                                            erB := r7 (p->Xfilt
                                                            erA)
  184 0000007A         
  185 0000007A F10C 053C       add              r5, r12, #YcoeffsB
  186 0000007E E895 03E0       ldmia            r5, {r5 - r9} ; r5 := p->Ycoeff
                                                            sB[0]
  187 00000082         ; r6 := p->YcoeffsB[1]
  188 00000082         ; r7 := p->YcoeffsB[2]
  189 00000082         ; r8 := p->YcoeffsB[3]
  190 00000082         ; r9 := p->YcoeffsB[4]
  191 00000082         



ARM Macro Assembler    Page 6 


  192 00000082 EBBB 0A0A       subs             r10, r11, r10 
                                                            ; r10 := r11 - r10
  193 00000086         
  194 00000086                 STR2OFS          r10, r11, r14, #YDELAYB-4
   90 00000086         
   91 00000086 F8CE A0A4       str              r10, [r14, #YDELAYB-4]
   92 0000008A F8CE B0A8       str              r11, [r14, #YDELAYB-4+4]
   93 0000008E         
  195 0000008E         ; p->buf[YDELAYB-1] = r10
  196 0000008E         ; p->buf[YDELAYB] = r11
  197 0000008E         
  198 0000008E FB0B F105       mul              r1, r11, r5 ; r1 := p->buf[YDEL
                                                            AYB] * p->YcoeffsB[
                                                            0]
  199 00000092 FB0A 1106       mla              r1, r10, r6, r1 ; r1 += p->buf[
                                                            YDELAYB-1] * p->Yco
                                                            effsB[1]
  200 00000096 FB04 1107       mla              r1, r4, r7, r1 ; r1 += p->buf[Y
                                                            DELAYB-2] * p->Ycoe
                                                            ffsB[2]
  201 0000009A FB03 1108       mla              r1, r3, r8, r1 ; r1 += p->buf[Y
                                                            DELAYB-3] * p->Ycoe
                                                            ffsB[3]
  202 0000009E FB02 1109       mla              r1, r2, r9, r1 ; r1 += p->buf[Y
                                                            DELAYB-4] * p->Ycoe
                                                            ffsB[4]
  203 000000A2         
  204 000000A2         ; flags were set above, in the subs instruction
  205 000000A2 BFC8 F06F 
              0A00             mvngt            r10, #0
  206 000000A8 BFB8 F04F 
              0A01             movlt            r10, #1     ; r10 := SIGN(r10) 
                                                            (see .c for SIGN ma
                                                            cro)
  207 000000AE         
  208 000000AE F1BB 0F00       cmp              r11, #0
  209 000000B2 BFC8 F06F 
              0B00             mvngt            r11, #0
  210 000000B8 BFB8 F04F 
              0B01             movlt            r11, #1     ; r11 := SIGN(r11) 
                                                            (see .c for SIGN ma
                                                            cro)
  211 000000BE         
  212 000000BE                 STR2OFS          r10, r11, r14, #YADAPTCOEFFSB-4
   90 000000BE         
   91 000000BE F8CE A024       str              r10, [r14, #YADAPTCOEFFSB-4]
   92 000000C2 F8CE B028       str              r11, [r14, #YADAPTCOEFFSB-4+4]
   93 000000C6         
  213 000000C6         ; p->buf[YADAPTCOEFFSB-1] := r10
  214 000000C6         ; p->buf[YADAPTCOEFFSB] := r11
  215 000000C6         
  216 000000C6         ; r0 still contains predictionA
  217 000000C6         ; r1 contains predictionB
  218 000000C6         
  219 000000C6         ; Finish Predictor Y
  220 000000C6         
  221 000000C6 9A00            ldr              r2, [sp]    ; r2 := decoded0
  222 000000C8 EB00 0061       add              r0, r0, r1, asr #1 ; r0 := r0 +
                                                             (r1 >> 1)



ARM Macro Assembler    Page 7 


  223 000000CC F8DC 4018       ldr              r4, [r12, #YfilterA] 
                                                            ; r4 := p->YfilterA
                                                            
  224 000000D0 6813            ldr              r3, [r2]    ; r3 := *decoded0
  225 000000D2 EBC4 1444       rsb              r4, r4, r4, lsl #5 ; r4 := r4 *
                                                             32 - r4 ( == r4*31
                                                            )
  226 000000D6 EB03 21A0       add              r1, r3, r0, asr #10 ; r1 := r3 
                                                            + (r0 >> 10)
  227 000000DA F8CC 1004       str              r1, [r12, #YlastA] 
                                                            ; p->YlastA := r1
  228 000000DE EB01 1164       add              r1, r1, r4, asr #5 ; r1 := r1 +
                                                             (r4 >> 5)
  229 000000E2 F8CC 1018       str              r1, [r12, #YfilterA] 
                                                            ; p->YfilterA := r1
                                                            
  230 000000E6         
  231 000000E6         ; r1 contains p->YfilterA
  232 000000E6         ; r2 contains decoded0
  233 000000E6         ; r3 contains *decoded0
  234 000000E6         
  235 000000E6         ; r5, r6, r7, r8, r9 contain p->YcoeffsB[0..4]
  236 000000E6         ; r10, r11 contain p->buf[YADAPTCOEFFSB-1] and p->buf[YA
                       DAPTCOEFFSB]
  237 000000E6         
  238 000000E6 F842 1B04       str              r1, [r2], #4 ; *(decoded0++) :=
                                                             r1  (p->YfilterA)
  239 000000EA 9200            str              r2, [sp]    ; save decoded0
  240 000000EC 2B00            cmp              r3, #0
  241 000000EE D039            beq              %f3
  242 000000F0         
  243 000000F0 F10E 0218       add              r2, r14, #YADAPTCOEFFSB-16
  244 000000F4 CA1C            ldmia            r2, {r2 - r4} ; r2 := p->buf[YA
                                                            DAPTCOEFFSB-4]
  245 000000F6         ; r3 := p->buf[YADAPTCOEFFSB-3]
  246 000000F6         ; r4 := p->buf[YADAPTCOEFFSB-2]
  247 000000F6 DB1E            blt              %f1
  248 000000F8         
  249 000000F8         ; *decoded0 > 0
  250 000000F8         
  251 000000F8 EBA5 050B       sub              r5, r5, r11 ; r5 := p->YcoeffsB
                                                            [0] - p->buf[YADAPT
                                                            COEFFSB]
  252 000000FC EBA6 060A       sub              r6, r6, r10 ; r6 := p->YcoeffsB
                                                            [1] - p->buf[YADAPT
                                                            COEFFSB-1]
  253 00000100 EBA9 0902       sub              r9, r9, r2  ; r9 := p->YcoeffsB
                                                            [4] - p->buf[YADAPT
                                                            COEFFSB-4]
  254 00000104 EBA8 0803       sub              r8, r8, r3  ; r8 := p->YcoeffsB
                                                            [3] - p->buf[YADAPT
                                                            COEFFSB-3]
  255 00000108 EBA7 0704       sub              r7, r7, r4  ; r7 := p->YcoeffsB
                                                            [2] - p->buf[YADAPT
                                                            COEFFSB-2]
  256 0000010C         
  257 0000010C F10C 003C       add              r0, r12, #YcoeffsB
  258 00000110 E880 03E0       stmia            r0, {r5 - r9} ; Save p->Ycoeffs
                                                            B[]



ARM Macro Assembler    Page 8 


  259 00000114         
  260 00000114 F10C 011C       add              r1, r12, #YcoeffsA
  261 00000118 E891 003C       ldmia            r1, {r2 - r5} ; r2 := p->Ycoeff
                                                            sA[0]
  262 0000011C         ; r3 := p->YcoeffsA[1]
  263 0000011C         ; r4 := p->YcoeffsA[2]
  264 0000011C         ; r5 := p->YcoeffsA[3]
  265 0000011C         
  266 0000011C F10E 063C       add              r6, r14, #YADAPTCOEFFSA-12
  267 00000120 E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->buf[YA
                                                            DAPTCOEFFSA-3]
  268 00000124         ; r7 := p->buf[YADAPTCOEFFSA-2]
  269 00000124         ; r8 := p->buf[YADAPTCOEFFSA-1]
  270 00000124         ; r9 := p->buf[YADAPTCOEFFSA]
  271 00000124         
  272 00000124 EBA5 0506       sub              r5, r5, r6  ; r5 := p->YcoeffsA
                                                            [3] - p->buf[YADAPT
                                                            COEFFSA-3]
  273 00000128 EBA4 0407       sub              r4, r4, r7  ; r4 := p->YcoeffsA
                                                            [2] - p->buf[YADAPT
                                                            COEFFSA-2]
  274 0000012C EBA3 0308       sub              r3, r3, r8  ; r3 := p->YcoeffsA
                                                            [1] - p->buf[YADAPT
                                                            COEFFSA-1]
  275 00000130 EBA2 0209       sub              r2, r2, r9  ; r2 := p->YcoeffsA
                                                            [0] - p->buf[YADAPT
                                                            COEFFSA]
  276 00000134         
  277 00000134 E014            b                %f2
  278 00000136         
  279 00000136         
  280 00000136         1                                    ; *decoded0 < 0
  281 00000136         
  282 00000136 445D            add              r5, r5, r11 ; r5 := p->YcoeffsB
                                                            [0] + p->buf[YADAPT
                                                            COEFFSB]
  283 00000138 4456            add              r6, r6, r10 ; r6 := p->YcoeffsB
                                                            [1] + p->buf[YADAPT
                                                            COEFFSB-1]
  284 0000013A 4491            add              r9, r9, r2  ; r9 := p->YcoeffsB
                                                            [4] + p->buf[YADAPT
                                                            COEFFSB-4]
  285 0000013C 4498            add              r8, r8, r3  ; r9 := p->YcoeffsB
                                                            [3] + p->buf[YADAPT
                                                            COEFFSB-3]
  286 0000013E 4427            add              r7, r7, r4  ; r8 := p->YcoeffsB
                                                            [2] + p->buf[YADAPT
                                                            COEFFSB-2]
  287 00000140         
  288 00000140 F10C 003C       add              r0, r12, #YcoeffsB
  289 00000144 E880 03E0       stmia            r0, {r5 - r9} ; Save p->Ycoeffs
                                                            B[]
  290 00000148         
  291 00000148 F10C 011C       add              r1, r12, #YcoeffsA
  292 0000014C E891 003C       ldmia            r1, {r2 - r5} ; r2 := p->Ycoeff
                                                            sA[0]
  293 00000150         ; r3 := p->YcoeffsA[1]
  294 00000150         ; r4 := p->YcoeffsA[2]
  295 00000150         ; r5 := p->YcoeffsA[3]



ARM Macro Assembler    Page 9 


  296 00000150         
  297 00000150 F10E 063C       add              r6, r14, #YADAPTCOEFFSA-12
  298 00000154 E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->buf[YA
                                                            DAPTCOEFFSA-3]
  299 00000158         ; r7 := p->buf[YADAPTCOEFFSA-2]
  300 00000158         ; r8 := p->buf[YADAPTCOEFFSA-1]
  301 00000158         ; r9 := p->buf[YADAPTCOEFFSA]
  302 00000158         
  303 00000158 4435            add              r5, r5, r6  ; r5 := p->YcoeffsA
                                                            [3] + p->buf[YADAPT
                                                            COEFFSA-3]
  304 0000015A 443C            add              r4, r4, r7  ; r4 := p->YcoeffsA
                                                            [2] + p->buf[YADAPT
                                                            COEFFSA-2]
  305 0000015C 4443            add              r3, r3, r8  ; r3 := p->YcoeffsA
                                                            [1] + p->buf[YADAPT
                                                            COEFFSA-1]
  306 0000015E 444A            add              r2, r2, r9  ; r2 := p->YcoeffsA
                                                            [0] + p->buf[YADAPT
                                                            COEFFSA]
  307 00000160         
  308 00000160         2
  309 00000160 E881 003C       stmia            r1, {r2 - r5} 
                                                            ; Save p->YcoeffsA
  310 00000164         
  311 00000164         3
  312 00000164         
  313 00000164         ;@;@;@;@;@;@;@;@;@;@;@;@;@; PREDICTOR X
  314 00000164         
  315 00000164         ; Predictor X, Filter A
  316 00000164         
  317 00000164 F8DC B008       ldr              r11, [r12, #XlastA] 
                                                            ; r11 := p->XlastA
  318 00000168         
  319 00000168 F10E 027C       add              r2, r14, #XDELAYA-12 ; r2 := &p
                                                            ->buf[XDELAYA-3]
  320 0000016C E892 040C       ldmia            r2, {r2, r3, r10} ; r2 := p->bu
                                                            f[XDELAYA-3]
  321 00000170         ; r3 := p->buf[XDELAYA-2]
  322 00000170         ; r10 := p->buf[XDELAYA-1]
  323 00000170         
  324 00000170 F10C 062C       add              r6, r12, #XcoeffsA
  325 00000174 E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->Xcoeff
                                                            sA[0]
  326 00000178         ; r7 := p->XcoeffsA[1]
  327 00000178         ; r8 := p->XcoeffsA[2]
  328 00000178         ; r9 := p->XcoeffsA[3]
  329 00000178         
  330 00000178 EBBB 0A0A       subs             r10, r11, r10 
                                                            ; r10 := r11 - r10
  331 0000017C         
  332 0000017C                 STR2OFS          r10, r11, r14, #XDELAYA-4
   90 0000017C         
   91 0000017C F8CE A084       str              r10, [r14, #XDELAYA-4]
   92 00000180 F8CE B088       str              r11, [r14, #XDELAYA-4+4]
   93 00000184         
  333 00000184         ; p->buf[XDELAYA-1] = r10
  334 00000184         ; p->buf[XDELAYA] = r11
  335 00000184         



ARM Macro Assembler    Page 10 


  336 00000184 FB0B F006       mul              r0, r11, r6 ; r0 := p->buf[XDEL
                                                            AYA] * p->XcoeffsA[
                                                            0]
  337 00000188 FB0A 0007       mla              r0, r10, r7, r0 ; r0 += p->buf[
                                                            XDELAYA-1] * p->Xco
                                                            effsA[1]
  338 0000018C FB03 0008       mla              r0, r3, r8, r0 ; r0 += p->buf[X
                                                            DELAYA-2] * p->Xcoe
                                                            ffsA[2]
  339 00000190 FB02 0009       mla              r0, r2, r9, r0 ; r0 += p->buf[X
                                                            DELAYA-3] * p->Xcoe
                                                            ffsA[3]
  340 00000194         
  341 00000194         ; flags were set above, in the subs instruction
  342 00000194 BFC8 F06F 
              0A00             mvngt            r10, #0
  343 0000019A BFB8 F04F 
              0A01             movlt            r10, #1     ; r10 := SIGN(r10) 
                                                            (see .c for SIGN ma
                                                            cro)
  344 000001A0         
  345 000001A0 F1BB 0F00       cmp              r11, #0
  346 000001A4 BFC8 F06F 
              0B00             mvngt            r11, #0
  347 000001AA BFB8 F04F 
              0B01             movlt            r11, #1     ; r11 := SIGN(r11) 
                                                            (see .c for SIGN ma
                                                            cro)
  348 000001B0         
  349 000001B0                 STR2OFS          r10, r11, r14, #XADAPTCOEFFSA-4
   90 000001B0         
   91 000001B0 F8CE A034       str              r10, [r14, #XADAPTCOEFFSA-4]
   92 000001B4 F8CE B038       str              r11, [r14, #XADAPTCOEFFSA-4+4]
   93 000001B8         
  350 000001B8         ; p->buf[XADAPTCOEFFSA-1] := r10
  351 000001B8         ; p->buf[XADAPTCOEFFSA] := r11
  352 000001B8         
  353 000001B8         ; NOTE: r0 now contains predictionA - don't overwrite.
  354 000001B8         
  355 000001B8         ; Predictor X, Filter B
  356 000001B8                 LDR2OFS          r6, r7, r12, #XfilterB 
                                                            ; r6 := p->XfilterB
                                                            
   79 000001B8         
   80 000001B8 F8DC 6014       ldr              r6, [r12, #XfilterB]
   81 000001BC F8DC 7018       ldr              r7, [r12, #XfilterB+4]
   82 000001C0         
  357 000001C0         ; r7 := p->YfilterA
  358 000001C0         
  359 000001C0         
  360 000001C0 F10E 0258       add              r2, r14, #XDELAYB-16 ; r2 := &p
                                                            ->buf[XDELAYB-4]
  361 000001C4 E892 041C       ldmia            r2, {r2 - r4, r10} ; r2 := p->b
                                                            uf[XDELAYB-4]
  362 000001C8         ; r3 := p->buf[XDELAYB-3]
  363 000001C8         ; r4 := p->buf[XDELAYB-2]
  364 000001C8         ; r10 := p->buf[XDELAYB-1]
  365 000001C8         
  366 000001C8 EBC6 1646       rsb              r6, r6, r6, lsl #5 ; r6 := r2 *



ARM Macro Assembler    Page 11 


                                                             32 - r6 ( == r6*31
                                                            )
  367 000001CC EBA7 1B66       sub              r11, r7, r6, asr #5 ; r11 (p->b
                                                            uf[XDELAYB]) := r7 
                                                            - (r6 >> 5)
  368 000001D0         
  369 000001D0 F8CC 7014       str              r7, [r12, #XfilterB] ; p->Xfilt
                                                            erB := r7 (p->Yfilt
                                                            erA)
  370 000001D4         
  371 000001D4 F10C 0550       add              r5, r12, #XcoeffsB
  372 000001D8 E895 03E0       ldmia            r5, {r5 - r9} ; r5 := p->Xcoeff
                                                            sB[0]
  373 000001DC         ; r6 := p->XcoeffsB[1]
  374 000001DC         ; r7 := p->XcoeffsB[2]
  375 000001DC         ; r8 := p->XcoeffsB[3]
  376 000001DC         ; r9 := p->XcoeffsB[4]
  377 000001DC         
  378 000001DC EBBB 0A0A       subs             r10, r11, r10 
                                                            ; r10 := r11 - r10
  379 000001E0         
  380 000001E0                 STR2OFS          r10, r11, r14, #XDELAYB-4
   90 000001E0         
   91 000001E0 F8CE A064       str              r10, [r14, #XDELAYB-4]
   92 000001E4 F8CE B068       str              r11, [r14, #XDELAYB-4+4]
   93 000001E8         
  381 000001E8         ; p->buf[XDELAYB-1] = r10
  382 000001E8         ; p->buf[XDELAYB] = r11
  383 000001E8         
  384 000001E8 FB0B F105       mul              r1, r11, r5 ; r1 := p->buf[XDEL
                                                            AYB] * p->XcoeffsB[
                                                            0]
  385 000001EC FB0A 1106       mla              r1, r10, r6, r1 ; r1 += p->buf[
                                                            XDELAYB-1] * p->Xco
                                                            effsB[1]
  386 000001F0 FB04 1107       mla              r1, r4, r7, r1 ; r1 += p->buf[X
                                                            DELAYB-2] * p->Xcoe
                                                            ffsB[2]
  387 000001F4 FB03 1108       mla              r1, r3, r8, r1 ; r1 += p->buf[X
                                                            DELAYB-3] * p->Xcoe
                                                            ffsB[3]
  388 000001F8 FB02 1109       mla              r1, r2, r9, r1 ; r1 += p->buf[X
                                                            DELAYB-4] * p->Xcoe
                                                            ffsB[4]
  389 000001FC         
  390 000001FC         ; flags were set above, in the subs instruction
  391 000001FC BFC8 F06F 
              0A00             mvngt            r10, #0
  392 00000202 BFB8 F04F 
              0A01             movlt            r10, #1     ; r10 := SIGN(r10) 
                                                            (see .c for SIGN ma
                                                            cro)
  393 00000208         
  394 00000208 F1BB 0F00       cmp              r11, #0
  395 0000020C BFC8 F06F 
              0B00             mvngt            r11, #0
  396 00000212 BFB8 F04F 
              0B01             movlt            r11, #1     ; r11 := SIGN(r11) 
                                                            (see .c for SIGN ma



ARM Macro Assembler    Page 12 


                                                            cro)
  397 00000218         
  398 00000218                 STR2OFS          r10, r11, r14, #XADAPTCOEFFSB-4
   90 00000218         
   91 00000218 F8CE A010       str              r10, [r14, #XADAPTCOEFFSB-4]
   92 0000021C F8CE B014       str              r11, [r14, #XADAPTCOEFFSB-4+4]
   93 00000220         
  399 00000220         ; p->buf[XADAPTCOEFFSB-1] := r10
  400 00000220         ; p->buf[XADAPTCOEFFSB] := r11
  401 00000220         
  402 00000220         ; r0 still contains predictionA
  403 00000220         ; r1 contains predictionB
  404 00000220         
  405 00000220         ; Finish Predictor X
  406 00000220         
  407 00000220 9A01            ldr              r2, [sp, #4] ; r2 := decoded1
  408 00000222 EB00 0061       add              r0, r0, r1, asr #1 ; r0 := r0 +
                                                             (r1 >> 1)
  409 00000226 F8DC 4010       ldr              r4, [r12, #XfilterA] 
                                                            ; r4 := p->XfilterA
                                                            
  410 0000022A 6813            ldr              r3, [r2]    ; r3 := *decoded1
  411 0000022C EBC4 1444       rsb              r4, r4, r4, lsl #5 ; r4 := r4 *
                                                             32 - r4 ( == r4*31
                                                            )
  412 00000230 EB03 21A0       add              r1, r3, r0, asr #10 ; r1 := r3 
                                                            + (r0 >> 10)
  413 00000234 F8CC 1008       str              r1, [r12, #XlastA] 
                                                            ; p->XlastA := r1
  414 00000238 EB01 1164       add              r1, r1, r4, asr #5 ; r1 := r1 +
                                                             (r4 >> 5)
  415 0000023C F8CC 1010       str              r1, [r12, #XfilterA] 
                                                            ; p->XfilterA := r1
                                                            
  416 00000240         
  417 00000240         ; r1 contains p->XfilterA
  418 00000240         ; r2 contains decoded1
  419 00000240         ; r3 contains *decoded1
  420 00000240         
  421 00000240         ; r5, r6, r7, r8, r9 contain p->XcoeffsB[0..4]
  422 00000240         ; r10, r11 contain p->buf[XADAPTCOEFFSB-1] and p->buf[XA
                       DAPTCOEFFSB]
  423 00000240         
  424 00000240 F842 1B04       str              r1, [r2], #4 ; *(decoded1++) :=
                                                             r1  (p->XfilterA)
  425 00000244 9201            str              r2, [sp, #4] ; save decoded1
  426 00000246 2B00            cmp              r3, #0
  427 00000248 D039            beq              %f3
  428 0000024A         
  429 0000024A F10E 0204       add              r2, r14, #XADAPTCOEFFSB-16
  430 0000024E CA1C            ldmia            r2, {r2 - r4} ; r2 := p->buf[XA
                                                            DAPTCOEFFSB-4]
  431 00000250         ; r3 := p->buf[XADAPTCOEFFSB-3]
  432 00000250         ; r4 := p->buf[XADAPTCOEFFSB-2]
  433 00000250 DB1E            blt              %f1
  434 00000252         
  435 00000252         ; *decoded1 > 0
  436 00000252         
  437 00000252 EBA5 050B       sub              r5, r5, r11 ; r5 := p->XcoeffsB



ARM Macro Assembler    Page 13 


                                                            [0] - p->buf[XADAPT
                                                            COEFFSB]
  438 00000256 EBA6 060A       sub              r6, r6, r10 ; r6 := p->XcoeffsB
                                                            [1] - p->buf[XADAPT
                                                            COEFFSB-1]
  439 0000025A EBA9 0902       sub              r9, r9, r2  ; r9 := p->XcoeffsB
                                                            [4] - p->buf[XADAPT
                                                            COEFFSB-4]
  440 0000025E EBA8 0803       sub              r8, r8, r3  ; r8 := p->XcoeffsB
                                                            [3] - p->buf[XADAPT
                                                            COEFFSB-3]
  441 00000262 EBA7 0704       sub              r7, r7, r4  ; r7 := p->XcoeffsB
                                                            [2] - p->buf[XADAPT
                                                            COEFFSB-2]
  442 00000266         
  443 00000266 F10C 0050       add              r0, r12, #XcoeffsB
  444 0000026A E880 03E0       stmia            r0, {r5 - r9} ; Save p->Xcoeffs
                                                            B[]
  445 0000026E         
  446 0000026E F10C 012C       add              r1, r12, #XcoeffsA
  447 00000272 E891 003C       ldmia            r1, {r2 - r5} ; r2 := p->Xcoeff
                                                            sA[0]
  448 00000276         ; r3 := p->XcoeffsA[1]
  449 00000276         ; r4 := p->XcoeffsA[2]
  450 00000276         ; r5 := p->XcoeffsA[3]
  451 00000276         
  452 00000276 F10E 062C       add              r6, r14, #XADAPTCOEFFSA-12
  453 0000027A E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->buf[XA
                                                            DAPTCOEFFSA-3]
  454 0000027E         ; r7 := p->buf[XADAPTCOEFFSA-2]
  455 0000027E         ; r8 := p->buf[XADAPTCOEFFSA-1]
  456 0000027E         ; r9 := p->buf[XADAPTCOEFFSA]
  457 0000027E         
  458 0000027E EBA5 0506       sub              r5, r5, r6  ; r5 := p->XcoeffsA
                                                            [3] - p->buf[XADAPT
                                                            COEFFSA-3]
  459 00000282 EBA4 0407       sub              r4, r4, r7  ; r4 := p->XcoeffsA
                                                            [2] - p->buf[XADAPT
                                                            COEFFSA-2]
  460 00000286 EBA3 0308       sub              r3, r3, r8  ; r3 := p->XcoeffsA
                                                            [1] - p->buf[XADAPT
                                                            COEFFSA-1]
  461 0000028A EBA2 0209       sub              r2, r2, r9  ; r2 := p->XcoeffsA
                                                            [0] - p->buf[XADAPT
                                                            COEFFSA]
  462 0000028E         
  463 0000028E E014            b                %f2
  464 00000290         
  465 00000290         
  466 00000290         1                                    ; *decoded1 < 0
  467 00000290         
  468 00000290 445D            add              r5, r5, r11 ; r5 := p->XcoeffsB
                                                            [0] + p->buf[XADAPT
                                                            COEFFSB]
  469 00000292 4456            add              r6, r6, r10 ; r6 := p->XcoeffsB
                                                            [1] + p->buf[XADAPT
                                                            COEFFSB-1]
  470 00000294 4491            add              r9, r9, r2  ; r9 := p->XcoeffsB
                                                            [4] + p->buf[XADAPT



ARM Macro Assembler    Page 14 


                                                            COEFFSB-4]
  471 00000296 4498            add              r8, r8, r3  ; r8 := p->XcoeffsB
                                                            [3] + p->buf[XADAPT
                                                            COEFFSB-3]
  472 00000298 4427            add              r7, r7, r4  ; r7 := p->XcoeffsB
                                                            [2] + p->buf[XADAPT
                                                            COEFFSB-2]
  473 0000029A         
  474 0000029A F10C 0050       add              r0, r12, #XcoeffsB
  475 0000029E E880 03E0       stmia            r0, {r5 - r9} ; Save p->Xcoeffs
                                                            B[]
  476 000002A2         
  477 000002A2 F10C 012C       add              r1, r12, #XcoeffsA
  478 000002A6 E891 003C       ldmia            r1, {r2 - r5} ; r2 := p->Xcoeff
                                                            sA[0]
  479 000002AA         ; r3 := p->XcoeffsA[1]
  480 000002AA         ; r4 := p->XcoeffsA[2]
  481 000002AA         ; r5 := p->XcoeffsA[3]
  482 000002AA         
  483 000002AA F10E 062C       add              r6, r14, #XADAPTCOEFFSA-12
  484 000002AE E896 03C0       ldmia            r6, {r6 - r9} ; r6 := p->buf[XA
                                                            DAPTCOEFFSA-3]
  485 000002B2         ; r7 := p->buf[XADAPTCOEFFSA-2]
  486 000002B2         ; r8 := p->buf[XADAPTCOEFFSA-1]
  487 000002B2         ; r9 := p->buf[XADAPTCOEFFSA]
  488 000002B2         
  489 000002B2 4435            add              r5, r5, r6  ; r5 := p->XcoeffsA
                                                            [3] + p->buf[XADAPT
                                                            COEFFSA-3]
  490 000002B4 443C            add              r4, r4, r7  ; r4 := p->XcoeffsA
                                                            [2] + p->buf[XADAPT
                                                            COEFFSA-2]
  491 000002B6 4443            add              r3, r3, r8  ; r3 := p->XcoeffsA
                                                            [1] + p->buf[XADAPT
                                                            COEFFSA-1]
  492 000002B8 444A            add              r2, r2, r9  ; r2 := p->XcoeffsA
                                                            [0] + p->buf[XADAPT
                                                            COEFFSA]
  493 000002BA         
  494 000002BA         2
  495 000002BA E881 003C       stmia            r1, {r2 - r5} 
                                                            ; Save p->XcoeffsA
  496 000002BE         
  497 000002BE         3
  498 000002BE         
  499 000002BE         ;@;@;@;@;@;@;@;@;@;@;@;@;@; COMMON
  500 000002BE         
  501 000002BE F10E 0E04       add              r14, r14, #4 ; p->buf++
  502 000002C2         
  503 000002C2 F10C 0B64       add              r11, r12, #historybuffer ; r11 
                                                            := &p->historybuffe
                                                            r[0]
  504 000002C6         
  505 000002C6 F5AE 6A00       sub              r10, r14, #PREDICTOR_HISTORY_SI
ZE*4
  506 000002CA         ; r10 := p->buf - PREDICTOR_HISTORY_SIZE
  507 000002CA         
  508 000002CA 9802            ldr              r0, [sp, #8]
  509 000002CC 45DA            cmp              r10, r11



ARM Macro Assembler    Page 15 


  510 000002CE D009            beq              move_hist   ; The history buffe
                                                            r is full, we need 
                                                            to do a memmove
  511 000002D0         
  512 000002D0         ; Check loop count
  513 000002D0 1E40            subs             r0, r0, #1
  514 000002D2 BF18 9002       strne            r0, [sp, #8]
  515 000002D6 F47F AE98       bne              loop
  516 000002DA         
  517 000002DA         done
  518 000002DA F8CC E000       str              r14, [r12]  ; Save value of p->
                                                            buf
  519 000002DE B003            add              sp, sp, #12 ; Don't bother rest
                                                            oring r1-r3 
  520 000002E0         ;#ifdef ROCKBOX
  521 000002E0         ;    ldmpc   regs=r4-r11
  522 000002E0         ;#else
  523 000002E0 E8BD 8FF0       ldmia            sp!, {r4 - r11, pc}
  524 000002E4         ;#endif
  525 000002E4         
  526 000002E4         move_hist
  527 000002E4         ; dest = r11 (p->historybuffer)
  528 000002E4         ; src = r14 (p->buf)
  529 000002E4         ; n = 200
  530 000002E4         
  531 000002E4 E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  532 000002E8 E8AB 03FF       stmia            r11!, {r0-r9}
  533 000002EC E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  534 000002F0 E8AB 03FF       stmia            r11!, {r0-r9}
  535 000002F4 E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  536 000002F8 E8AB 03FF       stmia            r11!, {r0-r9}
  537 000002FC E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  538 00000300 E8AB 03FF       stmia            r11!, {r0-r9}
  539 00000304 E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  540 00000308 E8AB 03FF       stmia            r11!, {r0-r9}
  541 0000030C         
  542 0000030C 9802            ldr              r0, [sp, #8]
  543 0000030E F10C 0E64       add              r14, r12, #historybuffer ; p->b
                                                            uf = &p->historybuf
                                                            fer[0]
  544 00000312         
  545 00000312         ; Check loop count
  546 00000312 1E40            subs             r0, r0, #1
  547 00000314 BF18 9002       strne            r0, [sp, #8]
  548 00000318 F47F AE77       bne              loop
  549 0000031C         
  550 0000031C E7DD            b                done
  551 0000031E         ;    .size   predictor_decode_stereo, .-predictor_decode
                       _stereo
  552 0000031E         
  553 0000031E         ;    .global     predictor_decode_mono
  554 0000031E         ;    .type       predictor_decode_mono,%function
  555 0000031E         
  556 0000031E         ; Register usage:
  557 0000031E         ;
  558 0000031E         ; r0-r11 - scratch
  559 0000031E         ; r12 - struct predictor_t* p
  560 0000031E         ; r14 - int32_t* p->buf
  561 0000031E         



ARM Macro Assembler    Page 16 


  562 0000031E         ; void predictor_decode_mono(struct predictor_t* p,
  563 0000031E         ;                            int32_t* decoded0,
  564 0000031E         ;                            int count)
  565 0000031E                 ENDP
  566 0000031E         predictor_decode_mono
                               PROC
  567 0000031E                 EXPORT           predictor_decode_mono
  568 0000031E E92D 4FF6       stmdb            sp!, {r1, r2, r4-r11, lr}
  569 00000322         
  570 00000322         ; r1 (decoded0) is [sp]
  571 00000322         ; r2 (count)    is [sp, #4]
  572 00000322         
  573 00000322 4684            mov              r12, r0     ; r12 := p
  574 00000324 F8D0 E000       ldr              r14, [r0]   ; r14 := p->buf
  575 00000328         
  576 00000328         loopm
  577 00000328         
  578 00000328         ;@;@;@;@;@;@;@;@;@;@;@;@;@; PREDICTOR
  579 00000328         
  580 00000328 F8DC B004       ldr              r11, [r12, #YlastA] 
                                                            ; r11 := p->YlastA
  581 0000032C         
  582 0000032C F10E 02BC       add              r2, r14, #YDELAYA-12 ; r2 := &p
                                                            ->buf[YDELAYA-3]
  583 00000330 E892 040C       ldmia            r2, {r2, r3, r10} ; r2 := p->bu
                                                            f[YDELAYA-3]
  584 00000334         ; r3 := p->buf[YDELAYA-2]
  585 00000334         ; r10 := p->buf[YDELAYA-1]
  586 00000334         
  587 00000334 F10C 051C       add              r5, r12, #YcoeffsA ; r5 := &p->
                                                            YcoeffsA[0]
  588 00000338 E895 03C0       ldmia            r5, {r6 - r9} ; r6 := p->Ycoeff
                                                            sA[0]
  589 0000033C         ; r7 := p->YcoeffsA[1]
  590 0000033C         ; r8 := p->YcoeffsA[2]
  591 0000033C         ; r9 := p->YcoeffsA[3]
  592 0000033C         
  593 0000033C EBBB 0A0A       subs             r10, r11, r10 
                                                            ; r10 := r11 - r10
  594 00000340         
  595 00000340                 STR2OFS          r10, r11, r14, #YDELAYA-4
   90 00000340         
   91 00000340 F8CE A0C4       str              r10, [r14, #YDELAYA-4]
   92 00000344 F8CE B0C8       str              r11, [r14, #YDELAYA-4+4]
   93 00000348         
  596 00000348         ; p->buf[YDELAYA-1] = r10
  597 00000348         ; p->buf[YDELAYA] = r11
  598 00000348         
  599 00000348 FB0B F006       mul              r0, r11, r6 ; r0 := p->buf[YDEL
                                                            AYA] * p->YcoeffsA[
                                                            0]
  600 0000034C FB0A 0007       mla              r0, r10, r7, r0 ; r0 += p->buf[
                                                            YDELAYA-1] * p->Yco
                                                            effsA[1]
  601 00000350 FB03 0008       mla              r0, r3, r8, r0 ; r0 += p->buf[Y
                                                            DELAYA-2] * p->Ycoe
                                                            ffsA[2]
  602 00000354 FB02 0009       mla              r0, r2, r9, r0 ; r0 += p->buf[Y
                                                            DELAYA-3] * p->Ycoe



ARM Macro Assembler    Page 17 


                                                            ffsA[3]
  603 00000358         
  604 00000358         ; flags were set above, in the subs instruction
  605 00000358 BFC8 F06F 
              0A00             mvngt            r10, #0
  606 0000035E BFB8 F04F 
              0A01             movlt            r10, #1     ; r10 := SIGN(r10) 
                                                            (see .c for SIGN ma
                                                            cro)
  607 00000364         
  608 00000364 F1BB 0F00       cmp              r11, #0
  609 00000368 BFC8 F06F 
              0B00             mvngt            r11, #0
  610 0000036E BFB8 F04F 
              0B01             movlt            r11, #1     ; r11 := SIGN(r11) 
                                                            (see .c for SIGN ma
                                                            cro)
  611 00000374         
  612 00000374                 STR2OFS          r10, r11, r14, #YADAPTCOEFFSA-4
   90 00000374         
   91 00000374 F8CE A044       str              r10, [r14, #YADAPTCOEFFSA-4]
   92 00000378 F8CE B048       str              r11, [r14, #YADAPTCOEFFSA-4+4]
   93 0000037C         
  613 0000037C         ; p->buf[YADAPTCOEFFSA-1] := r10
  614 0000037C         ; p->buf[YADAPTCOEFFSA] := r11
  615 0000037C         
  616 0000037C 9A00            ldr              r2, [sp]    ; r2 := decoded0
  617 0000037E F8DC 4018       ldr              r4, [r12, #YfilterA] 
                                                            ; r4 := p->YfilterA
                                                            
  618 00000382 6813            ldr              r3, [r2]    ; r3 := *decoded0
  619 00000384 EBC4 1444       rsb              r4, r4, r4, lsl #5 ; r4 := r4 *
                                                             32 - r4 ( == r4*31
                                                            )
  620 00000388 EB03 21A0       add              r1, r3, r0, asr #10 ; r1 := r3 
                                                            + (r0 >> 10)
  621 0000038C F8CC 1004       str              r1, [r12, #YlastA] 
                                                            ; p->YlastA := r1
  622 00000390 EB01 1164       add              r1, r1, r4, asr #5 ; r1 := r1 +
                                                             (r4 >> 5)
  623 00000394 F8CC 1018       str              r1, [r12, #YfilterA] 
                                                            ; p->YfilterA := r1
                                                            
  624 00000398         
  625 00000398         ; r1 contains p->YfilterA
  626 00000398         ; r2 contains decoded0
  627 00000398         ; r3 contains *decoded0
  628 00000398         
  629 00000398         ; r6, r7, r8, r9 contain p->YcoeffsA[0..3]
  630 00000398         ; r10, r11 contain p->buf[YADAPTCOEFFSA-1] and p->buf[YA
                       DAPTCOEFFSA]
  631 00000398         
  632 00000398 F842 1B04       str              r1, [r2], #4 ; *(decoded0++) :=
                                                             r1  (p->YfilterA)
  633 0000039C 9200            str              r2, [sp]    ; save decoded0
  634 0000039E 2B00            cmp              r3, #0
  635 000003A0 D013            beq              %f3
  636 000003A2         
  637 000003A2                 LDR2OFS          r2, r3, r14, #YADAPTCOEFFSA-12



ARM Macro Assembler    Page 18 


   79 000003A2         
   80 000003A2 F8DE 203C       ldr              r2, [r14, #YADAPTCOEFFSA-12]
   81 000003A6 F8DE 3040       ldr              r3, [r14, #YADAPTCOEFFSA-12+4]
   82 000003AA         
  638 000003AA         ; r2 := p->buf[YADAPTCOEFFSA-3]
  639 000003AA         ; r3 := p->buf[YADAPTCOEFFSA-2]
  640 000003AA         
  641 000003AA DB08            blt              %f1
  642 000003AC         
  643 000003AC         ; *decoded0 > 0
  644 000003AC         
  645 000003AC EBA6 060B       sub              r6, r6, r11 ; r6 := p->YcoeffsA
                                                            [0] - p->buf[YADAPT
                                                            COEFFSA]
  646 000003B0 EBA7 070A       sub              r7, r7, r10 ; r7 := p->YcoeffsA
                                                            [1] - p->buf[YADAPT
                                                            COEFFSA-1]
  647 000003B4 EBA9 0902       sub              r9, r9, r2  ; r9 := p->YcoeffsA
                                                            [3] - p->buf[YADAPT
                                                            COEFFSA-3]
  648 000003B8 EBA8 0803       sub              r8, r8, r3  ; r8 := p->YcoeffsA
                                                            [2] - p->buf[YADAPT
                                                            COEFFSA-2]
  649 000003BC         
  650 000003BC E003            b                %f2
  651 000003BE         
  652 000003BE         1                                    ; *decoded0 < 0
  653 000003BE         
  654 000003BE 445E            add              r6, r6, r11 ; r6 := p->YcoeffsA
                                                            [0] + p->buf[YADAPT
                                                            COEFFSA]
  655 000003C0 4457            add              r7, r7, r10 ; r7 := p->YcoeffsA
                                                            [1] + p->buf[YADAPT
                                                            COEFFSA-1]
  656 000003C2 4491            add              r9, r9, r2  ; r9 := p->YcoeffsA
                                                            [3] + p->buf[YADAPT
                                                            COEFFSA-3]
  657 000003C4 4498            add              r8, r8, r3  ; r8 := p->YcoeffsA
                                                            [2] + p->buf[YADAPT
                                                            COEFFSA-2]
  658 000003C6         
  659 000003C6         2
  660 000003C6 E885 03C0       stmia            r5, {r6 - r9} 
                                                            ; Save p->YcoeffsA
  661 000003CA         
  662 000003CA         3
  663 000003CA         
  664 000003CA         ;@;@;@;@;@;@;@;@;@;@;@;@;@; COMMON
  665 000003CA         
  666 000003CA F10E 0E04       add              r14, r14, #4 ; p->buf++
  667 000003CE         
  668 000003CE F10C 0B64       add              r11, r12, #historybuffer ; r11 
                                                            := &p->historybuffe
                                                            r[0]
  669 000003D2         
  670 000003D2 F5AE 6A00       sub              r10, r14, #PREDICTOR_HISTORY_SI
ZE*4
  671 000003D6         ; r10 := p->buf - PREDICTOR_HISTORY_SIZE
  672 000003D6         



ARM Macro Assembler    Page 19 


  673 000003D6 9801            ldr              r0, [sp, #4]
  674 000003D8 45DA            cmp              r10, r11
  675 000003DA D008            beq              move_histm  ; The history buffe
                                                            r is full, we need 
                                                            to do a memmove
  676 000003DC         
  677 000003DC         ; Check loop count
  678 000003DC 1E40            subs             r0, r0, #1
  679 000003DE BF18 9001       strne            r0, [sp, #4]
  680 000003E2 D1A1            bne              loopm
  681 000003E4         
  682 000003E4         donem
  683 000003E4 F8CC E000       str              r14, [r12]  ; Save value of p->
                                                            buf
  684 000003E8 B002            add              sp, sp, #8  ; Don't bother rest
                                                            oring r1, r2
  685 000003EA         
  686 000003EA E8BD 8FF0       ldmia            sp!, {r4 - r11, pc}
  687 000003EE         
  688 000003EE         
  689 000003EE         move_histm
  690 000003EE         ; dest = r11 (p->historybuffer)
  691 000003EE         ; src = r14 (p->buf)
  692 000003EE         ; n = 200
  693 000003EE         
  694 000003EE E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  695 000003F2 E8AB 03FF       stmia            r11!, {r0-r9}
  696 000003F6 E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  697 000003FA E8AB 03FF       stmia            r11!, {r0-r9}
  698 000003FE E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  699 00000402 E8AB 03FF       stmia            r11!, {r0-r9}
  700 00000406 E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  701 0000040A E8AB 03FF       stmia            r11!, {r0-r9}
  702 0000040E E8BE 03FF       ldmia            r14!, {r0-r9} ; 40 bytes
  703 00000412 E8AB 03FF       stmia            r11!, {r0-r9}
  704 00000416         
  705 00000416 9801            ldr              r0, [sp, #4]
  706 00000418 F10C 0E64       add              r14, r12, #historybuffer ; p->b
                                                            uf = &p->historybuf
                                                            fer[0]
  707 0000041C         
  708 0000041C         ; Check loop count
  709 0000041C 1E40            subs             r0, r0, #1
  710 0000041E BF18 9001       strne            r0, [sp, #4]
  711 00000422 D181            bne              loopm
  712 00000424         
  713 00000424 E7DE            b                donem
  714 00000426         ;   .size   predictor_decode_mono, .-predictor_decode_mo
                       no
  715 00000426                 ENDP
  716 00000426                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=..\obj\predictor-arm.d -o..\obj\predictor-arm.o -I.\RTE\_Target
_1 -I"D:\learning materials\stm32OfSoftWare\MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.
9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -I"D:\learning materials\stm32Of
SoftWare\MDK5\ARM\CMSIS\Include" -I"D:\learning materials\stm32OfSoftWare\MDK5\
ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Device\Include" --predefine="__UVISION_VERSIO
N SETA 525" --predefine="STM32F429xx SETA 1" --list=..\obj\predictor-arm.lst ..
\AUDIOCODEC\ape\apedec\predictor-arm.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 00000136

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000290

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000003BE

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000160

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000002BA

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000164

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000003C6

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000003CA

Symbol: 



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000002BE

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
.text 00000000

Symbol: .text
   Definitions
      At line 26 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      None
Comment: .text unused
done 000002DA

Symbol: done
   Definitions
      At line 517 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 550 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
Comment: done used once
donem 000003E4

Symbol: donem
   Definitions
      At line 682 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 713 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
Comment: donem used once
loop 0000000A

Symbol: loop
   Definitions
      At line 120 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 515 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 548 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

loopm 00000328

Symbol: loopm
   Definitions
      At line 576 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 680 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 711 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

move_hist 000002E4

Symbol: move_hist
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 526 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 510 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
Comment: move_hist used once
move_histm 000003EE

Symbol: move_histm
   Definitions
      At line 689 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 675 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
Comment: move_histm used once
predictor_decode_mono 0000031E

Symbol: predictor_decode_mono
   Definitions
      At line 566 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 567 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
Comment: predictor_decode_mono used once
predictor_decode_stereo 00000000

Symbol: predictor_decode_stereo
   Definitions
      At line 108 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 74 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 109 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PREDICTOR_HISTORY_SIZE 00000200

Symbol: PREDICTOR_HISTORY_SIZE
   Definitions
      At line 33 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 505 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 670 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XADAPTCOEFFSA 00000038

Symbol: XADAPTCOEFFSA
   Definitions
      At line 42 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 91 in macro STR2OFS
      at line 349 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 349 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 452 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 483 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XADAPTCOEFFSB 00000014

Symbol: XADAPTCOEFFSB
   Definitions
      At line 44 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 91 in macro STR2OFS
      at line 398 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 398 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 429 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XDELAYA 00000088

Symbol: XDELAYA
   Definitions
      At line 37 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 319 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 91 in macro STR2OFS
      at line 332 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 332 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XDELAYB 00000068

Symbol: XDELAYB
   Definitions
      At line 38 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 360 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 91 in macro STR2OFS
      at line 380 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 380 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XcoeffsA 0000002C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: XcoeffsA
   Definitions
      At line 59 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 324 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 446 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 477 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XcoeffsB 00000050

Symbol: XcoeffsB
   Definitions
      At line 61 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 371 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 443 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 474 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XfilterA 00000010

Symbol: XfilterA
   Definitions
      At line 53 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 409 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 415 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XfilterB 00000014

Symbol: XfilterB
   Definitions
      At line 55 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 80 in macro LDR2OFS
      at line 356 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 81 in macro LDR2OFS
      at line 356 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 369 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

XlastA 00000008

Symbol: XlastA
   Definitions
      At line 50 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 317 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 413 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YADAPTCOEFFSA 00000048

Symbol: YADAPTCOEFFSA
   Definitions
      At line 41 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 91 in macro STR2OFS
      at line 162 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 162 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 266 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 297 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 80 in macro LDR2OFS
      at line 637 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 81 in macro LDR2OFS
      at line 637 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YADAPTCOEFFSB 00000028

Symbol: YADAPTCOEFFSB
   Definitions
      At line 43 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 91 in macro STR2OFS
      at line 212 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 212 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 243 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YDELAYA 000000C8

Symbol: YDELAYA
   Definitions
      At line 35 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 128 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 146 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 147 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 582 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 91 in macro STR2OFS
      at line 595 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 595 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YDELAYB 000000A8

Symbol: YDELAYB
   Definitions
      At line 36 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 174 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 91 in macro STR2OFS
      at line 194 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 92 in macro STR2OFS
      at line 194 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YcoeffsA 0000001C

Symbol: YcoeffsA
   Definitions
      At line 58 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 133 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 260 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 291 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 587 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YcoeffsB 0000003C




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: YcoeffsB
   Definitions
      At line 60 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 185 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 257 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 288 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YfilterA 00000018

Symbol: YfilterA
   Definitions
      At line 56 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 223 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 229 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 617 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 623 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YfilterB 0000000C

Symbol: YfilterB
   Definitions
      At line 52 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 80 in macro LDR2OFS
      at line 169 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 81 in macro LDR2OFS
      at line 169 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 183 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

YlastA 00000004

Symbol: YlastA
   Definitions
      At line 49 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 126 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 227 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 580 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 621 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

buf 00000000

Symbol: buf
   Definitions
      At line 47 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      None
Comment: buf unused
historybuffer 00000064

Symbol: historybuffer
   Definitions
      At line 63 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
   Uses
      At line 503 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 543 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S
      At line 668 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 706 in file ..\AUDIOCODEC\ape\apedec\predictor-arm.S

21 symbols
372 symbols in table
